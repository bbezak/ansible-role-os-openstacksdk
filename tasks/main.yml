---

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: vars

- name: Ensure EPEL repo is installed
  yum:
    name: epel-release
    state: installed
  become: True
  when:
    - os_shade_install_epel | bool
    - ansible_os_family == "RedHat"

- name: Ensure required packages are installed
  package:
    name: "{{ os_shade_package_dependencies }}"
    state: present
  become: True
  when: os_shade_install_package_dependencies | bool

- name: Check whether the virtualenv directory exists
  stat:
    path: "{{ os_shade_venv | dirname }}"
    get_md5: False
    get_checksum: False
    mime: False
  when: os_shade_venv != None
  register: os_shade_venv_stat

- name: Ensure the virtualenv directory exists
  file:
    path: "{{ os_shade_venv | dirname }}"
    state: directory
    owner: "{{ ansible_user_uid }}"
    group: "{{ ansible_user_gid }}"
  become: True
  when:
    - os_shade_venv != None
    - not os_shade_venv_stat.stat.exists or
      not os_shade_venv_stat.stat.writeable

- name: Ensure the latest version of pip is installed
  pip:
    name: "{{ item.name }}"
    state: latest
    virtualenv: "{{ os_shade_venv or omit }}"
  with_items:
    - { name: pip }

- name: Ensure required Python packages are installed
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version or omit }}"
    state: present
    virtualenv: "{{ os_shade_venv or omit }}"
  with_items:
    - name: shade
      version: "{{ os_shade_version }}"
